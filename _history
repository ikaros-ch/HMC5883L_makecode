{"entries":[{"timestamp":1730291664465,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"U+y~Rd53Qaybl?MG,X{1\""],[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":100,"start2":100,"length1":44,"length2":20},{"diffs":[[0,"ver\""],[-1," id=\"R|$zGkl-$]3O70-y5$^^\""],[0," x=\"2"],[-1,"0"],[1,"2"],[0,"5\" y=\""],[1,"2"],[0,"0\"><"]],"start1":151,"start2":151,"length1":46,"length2":21}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":248,"start2":248,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1730291664464,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","custom.ts":"//% color=#0fbc11 icon=\"\\uf2c2\" block=\"HMC5883L\"\nnamespace HMC5883L {\n    let gain = 0.92;  // Default gain for 1.3 Gauss\n    let declinationRadians = 0; // Declination angle in radians\n    const address = 0x1E;  // I2C address of HMC5883L\n\n    const GAIN_MAP: { [key: string]: [number, number] } = {\n        \"0.88\": [0 << 5, 0.73],\n        \"1.3\": [1 << 5, 0.92],\n        \"1.9\": [2 << 5, 1.22],\n        \"2.5\": [3 << 5, 1.52],\n        \"4.0\": [4 << 5, 2.27],\n        \"4.7\": [5 << 5, 2.56],\n        \"5.6\": [6 << 5, 3.03],\n        \"8.1\": [7 << 5, 4.35]\n    };\n\n    //% block=\"initialize HMC5883L with gauss %gauss declination %degrees degrees %minutes minutes\"\n    export function initialize(gauss: string = \"1.3\", degrees: number = 0, minutes: number = 0): void {\n        if (GAIN_MAP[gauss]) {\n            const [regValue, gainValue] = GAIN_MAP[gauss];\n            gain = gainValue;\n            pins.i2cWriteNumber(address, (0x01 << 8) | regValue, NumberFormat.UInt16BE);\n        }\n        declinationRadians = ((degrees + minutes / 60) * Math.PI) / 180;\n\n        // Configuration register A: 0b01110000 -> 8 samples, 15Hz output, normal mode\n        pins.i2cWriteNumber(address, (0x00 << 8) | 0b01110000, NumberFormat.UInt16BE);\n        // Set mode register to continuous mode\n        pins.i2cWriteNumber(address, (0x02 << 8) | 0x00, NumberFormat.UInt16BE);\n    }\n\n    //% block=\"read HMC5883L\"\n    export function read(): [number, number, number] {\n        let data = pins.i2cReadBuffer(address, 6);\n\n        let x = (data[0] << 8) | data[1];\n        let z = (data[2] << 8) | data[3];\n        let y = (data[4] << 8) | data[5];\n\n        // Convert to signed 16-bit\n        x = x > 0x7FFF ? x - 0x10000 : x;\n        y = y > 0x7FFF ? y - 0x10000 : y;\n        z = z > 0x7FFF ? z - 0x10000 : z;\n\n        x = Math.round(x * gain * 100) / 100;\n        y = Math.round(y * gain * 100) / 100;\n        z = Math.round(z * gain * 100) / 100;\n\n        return [x, y, z];\n    }\n\n    //% block=\"calculate heading from X %x Y %y\"\n    export function heading(x: number, y: number): number {\n        let headingRad = Math.atan2(y, x);\n        headingRad += declinationRadians;\n\n        if (headingRad < 0) headingRad += 2 * Math.PI;\n        if (headingRad > 2 * Math.PI) headingRad -= 2 * Math.PI;\n\n        return Math.round((headingRad * 180) / Math.PI);\n    }\n\n    //% block=\"formatted result\"\n    export function formatResult(): string {\n        const [x, y, z] = read();\n        const degrees = heading(x, y);\n        return `X: ${x.toFixed(2)}, Y: ${y.toFixed(2)}, Z: ${z.toFixed(2)}, Heading: ${degrees}Â°`;\n    }\n}\n","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v7.0.51\",\n        \"tag\": \"v7.0.51\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/c3819f016bd720d0eb86efea9a84dcd4fc7b2e1f\",\n        \"target\": \"7.0.51\",\n        \"pxt\": \"11.1.5\"\n    },\n    \"preferredEditor\": \"blocksprj\"\n}\n"}}],"shares":[],"lastSaveTime":1730291738402}